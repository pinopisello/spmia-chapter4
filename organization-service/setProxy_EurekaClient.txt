
	@ConfigurationProperties("eureka.client")
    public class EurekaClientConfigBean implements EurekaClientConfig, EurekaConstants 
	
EurekaClientConfigBean riceve registerWithEureka,fetchRegistry,serviceUrl  da application.yml

CloudEurekaClient extends DiscoveryClient e' la classe che attualmente si interfaccia all eureka server.

DiscoveryClient prende la configurazione per eureka endpoints,network parameters, etc da EurekaClientConfigBean che e' annotato da @ConfigurationProperties("eureka.client")

Il codice ignora i proxyHost e proxyPort anche se sono iniettati in EurekaClientConfigBean.
La config client http e' in EurekaClientAutoConfiguration.eurekaClient() e prende EurekaClientConfig = MutableDiscoveryClientOptionalArgs se non c'e' gia nessuna istanza di DiscoveryClientOptionalArgs definita.
Ne definisco una in SpringAppContextConfig.per settare i proxy params.
EurekaJerseyClientBuilder e' il builder che veramente viene usato per creare http client!!

Per risolvere ho crato SpringConfig.java annotata @Configuration e creato un META-INF/spring.factories con una entry 
org.springframework.boot.autoconfigure.EnableAutoConfiguration = SpringAppContextConfig in modo da generare EurekaJerseyClient con proxy settati correttamente.

La prima request verso il configserver e' GET http://localhost:8761/eureka/apps/ : DiscoveryClient.fetchRegistry


dopodiche  3 ThreadPoolExecutors vengono inizializzati per polling [initScheduledTasks()]:


		CacheRefreshThread [registryFetchIntervalSeconds,fetchRegistry,cacheRefreshExecutorExponentialBackOffBound]        							GET  http://localhost:8761/eureka/apps/
        HeartbeatThread    [registerWithEureka,leaseRenewalIntervalInSeconds,heartbeatExecutorExponentialBackOffBound]      					    PUT  http://localhost:8761/eureka/apps/ORGANIZATIONSERVICE/192.168.0.4:organizationservice?status=STARTING&lastDirtyTimestamp=1493390403151        
        InstanceInfoReplicator [instanceInfoReplicationIntervalSeconds]  invoca  discoveryClient.register() sse instanceInfo.isInstanceInfoDirty()  POST http://localhost:8761/eureka/apps/ORGANIZATIONSERVICE
        ApplicationInfoManager.statusChangeListener .Quando lo status dell app cambia, invoca  instanceInfoReplicator.onDemandUpdate()  			POST http://localhost:8761/eureka/apps/ORGANIZATIONSERVICE


		
